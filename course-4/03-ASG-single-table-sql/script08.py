import sqlite3
import os

DB_FILE = "production.db"

# --- Thi·∫øt l·∫≠p m√¥i tr∆∞·ªùng ---
# Gi·∫£ l·∫≠p vi·ªác t·∫°o CSDL v√† th√™m d·ªØ li·ªáu
def setup_database():
    # X√≥a file db c≈© n·∫øu c√≥ ƒë·ªÉ ch·∫°y l·∫°i t·ª´ ƒë·∫ßu
    if os.path.exists(DB_FILE):
        os.remove(DB_FILE)

    conn = sqlite3.connect(DB_FILE)
    cursor = conn.cursor()
    # T·∫°o b·∫£ng s·∫£n ph·∫©m
    cursor.execute('''
        CREATE TABLE SanPham (
            id INTEGER PRIMARY KEY,
            ten_san_pham TEXT,
            so_luong_da_ban INTEGER
        )
    ''')
    # Th√™m d·ªØ li·ªáu m·∫´u
    products = [
        ('Laptop Pro', 150),
        ('Chu·ªôt Gaming', 450),
        ('B√†n ph√≠m c∆°', 320),
        ('M√†n h√¨nh 4K', 120),
        ('Tai nghe ch·ªëng ·ªìn', 280)
    ]
    cursor.executemany('INSERT INTO SanPham (ten_san_pham, so_luong_da_ban) VALUES (?,?)', products)
    conn.commit()
    conn.close()
    print("‚úÖ ƒê√£ thi·∫øt l·∫≠p CSDL 'production.db' v·ªõi d·ªØ li·ªáu m·∫´u.")

# ==============================================================================
# PH·∫¶N 1: C√îNG VI·ªÜC C·ª¶A L·∫¨P TR√åNH VI√äN (DEVELOPER)
# ==============================================================================
# Developer vi·∫øt code n√†y, n√≥ s·∫Ω l√† m·ªôt ph·∫ßn c·ªßa ·ª©ng d·ª•ng web ho·∫∑c di ƒë·ªông.
# H·ªç kh√¥ng c·∫ßn ƒëƒÉng nh·∫≠p tr·ª±c ti·∫øp v√†o CSDL.

def get_top_selling_products(limit=3):
    """
    H√†m n√†y l√† m·ªôt ph·∫ßn c·ªßa ·ª©ng d·ª•ng, ƒë∆∞·ª£c vi·∫øt b·ªüi Developer.
    N√≥ k·∫øt n·ªëi t·ªõi CSDL theo c√°ch an to√†n (d√πng connection string c·ªßa ·ª©ng d·ª•ng)
    v√† ch·ªâ th·ª±c hi·ªán m·ªôt nhi·ªám v·ª• c·ª• th·ªÉ.
    """
    conn = None
    try:
        conn = sqlite3.connect(DB_FILE)
        cursor = conn.cursor()
        
        # C√¢u l·ªánh SQL ƒë·ªÉ l·∫•y top s·∫£n ph·∫©m
        query = "SELECT ten_san_pham, so_luong_da_ban FROM SanPham ORDER BY so_luong_da_ban DESC LIMIT ?"
        
        cursor.execute(query, (limit,))
        top_products = cursor.fetchall()
        
        return top_products
    except sqlite3.Error as e:
        print(f"L·ªói ·ª©ng d·ª•ng: {e}")
        return []
    finally:
        if conn:
            conn.close()

# ==============================================================================
# PH·∫¶N 2: C√îNG VI·ªÜC C·ª¶A QU·∫¢N TR·ªä VI√äN CSDL (DBA)
# ==============================================================================
# DBA ch·∫°y m·ªôt script ri√™ng bi·ªát ƒë·ªÉ b·∫£o tr√¨, th∆∞·ªùng l√† ch·∫°y tr·ª±c ti·∫øp tr√™n server.
# Script n√†y c√≥ th·ªÉ th·ª±c hi·ªán nh·ªØng t√°c v·ª• ·ªü m·ª©c h·ªá th·ªëng m√† ·ª©ng d·ª•ng kh√¥ng l√†m.

def run_dba_maintenance_script():
    """
    K·ªãch b·∫£n n√†y ƒë∆∞·ª£c DBA ch·∫°y tr·ª±c ti·∫øp ƒë·ªÉ ki·ªÉm tra "s·ª©c kh·ªèe" CSDL.
    H·ªç c√≥ quy·ªÅn ch·∫°y c√°c l·ªánh ƒë·∫∑c bi·ªát (v√≠ d·ª•: PRAGMA trong SQLite)
    ƒë·ªÉ xem th√¥ng tin h·ªá th·ªëng c·ªßa CSDL.
    """
    print("\n--- B·∫Øt ƒë·∫ßu ch·∫°y k·ªãch b·∫£n b·∫£o tr√¨ c·ªßa DBA ---")
    conn = None
    try:
        # DBA c√≥ th√¥ng tin ƒëƒÉng nh·∫≠p tr·ª±c ti·∫øp
        conn = sqlite3.connect(DB_FILE)
        cursor = conn.cursor()

        print("\n[DBA] Ki·ªÉm tra th√¥ng tin b·∫£ng 'SanPham':")
        # PRAGMA l√† l·ªánh ƒë·∫∑c bi·ªát c·ªßa SQLite, DBA d√πng n√≥ ƒë·ªÉ xem c·∫•u tr√∫c b·∫£ng
        cursor.execute("PRAGMA table_info(SanPham);")
        print(cursor.fetchall())

        print("\n[DBA] Ki·ªÉm tra k√≠ch th∆∞·ªõc ∆∞·ªõc t√≠nh c·ªßa CSDL:")
        # L·∫•y s·ªë l∆∞·ª£ng trang v√† k√≠ch th∆∞·ªõc trang ƒë·ªÉ ∆∞·ªõc t√≠nh dung l∆∞·ª£ng
        cursor.execute("PRAGMA page_count;")
        page_count = cursor.fetchone()[0]
        cursor.execute("PRAGMA page_size;")
        page_size = cursor.fetchone()[0]
        print(f"-> CSDL c√≥ {page_count} trang, m·ªói trang {page_size} bytes. T·ªïng c·ªông ~{page_count * page_size / 1024} KB.")

    except sqlite3.Error as e:
        print(f"L·ªói script b·∫£o tr√¨: {e}")
    finally:
        if conn:
            conn.close()
    print("--- K·∫øt th√∫c k·ªãch b·∫£n b·∫£o tr√¨ c·ªßa DBA ---")


# --- CH·∫†Y CH∆Ø∆†NG TR√åNH MINH H·ªåA ---
if __name__ == "__main__":
    # 1. Kh·ªüi t·∫°o m√¥i tr∆∞·ªùng
    setup_database()

    # 2. Gi·∫£ l·∫≠p ·ª©ng d·ª•ng ch·∫°y t√≠nh nƒÉng c·ªßa Developer
    print("\n--- ·ª®ng d·ª•ng ƒëang ch·∫°y t√≠nh nƒÉng 'Top s·∫£n ph·∫©m'... ---")
    top_3 = get_top_selling_products(3)
    print("üèÜ Top 3 s·∫£n ph·∫©m b√°n ch·∫°y nh·∫•t:")
    for i, product in enumerate(top_3):
        print(f"  {i+1}. {product[0]} (ƒë√£ b√°n: {product[1]})")

    # 3. Gi·∫£ l·∫≠p DBA th·ª±c hi·ªán c√¥ng vi·ªác b·∫£o tr√¨
    run_dba_maintenance_script()